p.stgng[j] <- lgamma(sum(alpha.bar))-lgamma(sum(alpha.star)) + sum(lgamma(alpha.star) - sum(lgamma(alpha.bar)))
}
exp(p.stgng)->p3.exp
a <- sum(p.trans[c(possible.stage,current.stage)] * p2.exp) #gives the probability of transitioning to another local stage
b <- exp(sum(p.stgng))
p.monitor[t] <- a*b
#  }
}
return(p.monitor)
}
one.step.forecast <- function(rho, epsilon, df_cut,which.cut,stage.key, n.monitor, crrnt.stg,k=0.8,tau=5){
possible.colorings <- listParts(dim(stage.key[[which.cut]])[1])##removin the one where no one gets a color
num.partitions <- as.vector(unlist(lapply(possible.colorings, function(x){length(x)})))
p.monitor <- rep(0, n.monitor-4)
change.points <- c()
for (t in 5:n.monitor){
df.cut <- df_cut[1:t,]#the counts to be considered
#determine the possible coarser partitions
idx.coarse <- which(num.partitions==length(possible.colorings[[crrnt.stg]])-1)#returs stagings with 2 colors
if (length(idx.coarse)==0){
hasse.coarse <- c()
} else{
first.set <- lapply(possible.colorings[idx.coarse], '[[', 1)
hasse.coarse <- c()
for (i in 1:length(idx.coarse)){
if (all(as.vector(unlist(possible.colorings[[crrnt.stg]][1])) %in% as.vector(unlist(first.set[[i]]))) ){hasse.coarse[i] <- TRUE}
else {hasse.coarse[i] <- FALSE}
}
}
#determine the possible finer partitons
idx.fine <- which(num.partitions==length(possible.colorings[[crrnt.stg]])+1)#returs stagings with 2 colors
if (length(idx.fine)==0) {hasse.fine <- c()
} else {
first.set <- lapply(possible.colorings[idx.fine], '[[', 1)
hasse.fine <- c()
for (i in 1:length(idx.fine)){
if (all( as.vector(unlist(first.set[[i]])) %in% as.vector(unlist(possible.colorings[[crrnt.stg]][1]))    ) ){
hasse.fine[i] <- TRUE
} else {
hasse.fine[i] <- FALSE
}
}
}
B <- sum(length(which(hasse.coarse==TRUE)), length(which(hasse.fine==TRUE)))# normalizing constant
p.trans <- rep(0, length(num.partitions))
p.trans[idx.coarse[hasse.coarse==TRUE]] <- (1/B)*(1-rho)
p.trans[idx.fine[hasse.fine==TRUE]] <- (1/B)*(1-rho)
p.trans[crrnt.stg] <- rho
#print(p.trans)
current.stage <- crrnt.stg#idx[crrnt.stg]
possible.stage <- c(idx.coarse[hasse.coarse==TRUE],idx.fine[hasse.fine==TRUE])
crrnt.stg <- ifelse(p.trans[crrnt.stg]==p.trans[which(p.trans==max(p.trans))[1]], crrnt.stg, which(p.trans==max(p.trans))[1])
#print(crrnt.stg)
if(current.stage != crrnt.stg) {change.points <- c(change.points, t)}
p2 <- rep(0, length(possible.stage)+1)
#staging distributions
for (i in 1:length(p2)){
if(i==length(p2)) {
clr <- possible.colorings[[current.stage]];
} else {
clr <- possible.colorings[[(possible.stage[i])]];
}#partition of interest
n <- prod(apply(df_cut, 2, function(x){length(levels(as.factor(x)))})) #total number of pathways in the CEG
p.stgng <- rep(0, length(clr))#total number of groups in the partition
for (j in 1:length(clr)){# loop over number of colors in proposed staging
#find ref prior for the
another.n <- length(levels(as.factor(df_cut[,which.cut])))
alpha.bar <- rep(n/(dim(stage.key[[which.cut]])[1]), another.n)*length(clr[[j]])/another.n
in.paths<-stage.key[[which.cut]][(clr[[j]]),]#id the incoming pathways
#in.path.idx <- which(stage.key[[target.cut]]$stage==target.stage)
df_cuts <- list()
for (l in 1:length(clr[[j]])){
df_cuts[[l]] <- df.cut
for(m in 1:(length(colnames(stage.key[[which.cut]]))-2)){
df_cuts[[l]] <- filter(df_cuts[[l]], UQ(sym(colnames(df_cut)[m]))==unlist(stage.key[[which.cut]][clr[[j]][l],m]))#filter according to the matching indices
}
}
df_paths <- do.call(rbind, df_cuts)
# df_paths <- filter(df_paths,Economic==cndtnl.stage.val)
obsv.stage.count <- count(df_paths,UQ(sym(colnames(df_paths)[which.cut])))#how many counts we observe in each stage
if(sum(obsv.stage.count$n)==0){
counts <- rep(0, length(alpha.bar))
} else if ((dim(obsv.stage.count[,1])[[1]]) !=another.n){
counts<-rep(0,length(alpha.bar))
counts[1:(dim(obsv.stage.count[,1])[[1]])] <- obsv.stage.count$n#THERE HAS GOT TO BE A BETTER WAY
counts <- unlist(counts)
} else {
counts <- obsv.stage.count$n
}
print(counts)
#alpha.star <-alpha.bar + counts
alpha.star <- (k^(t-1))*(alpha.bar-1) + (k^(t-tau))*counts + 1
p.stgng[j] <- lgamma(sum(alpha.bar))-lgamma(sum(alpha.star)) + sum(lgamma(alpha.star) - lgamma(alpha.bar))
}
p2[i] <- sum(p.stgng)
print(p2)
}
#p2.exp <- exp(p2) /sum(exp(p2))
p2.exp <- exp(p2)
clr <- possible.colorings[[current.stage]]
n <- prod(apply(df_cut, 2, function(x){length(levels(as.factor(x)))})) #total number of pathways in the CEG
p.stgng <- rep(0, length(clr))#total number of groups in the partition
#sampling and the parameter distribution
for (j in 1:length(clr)){# loop over number of colors in proposed staging
#find ref prior for the
another.n <- length(levels(as.factor(df[,which.cut])))
alpha.bar <- rep(n/(dim(stage.key[[which.cut]])[1]), another.n)*length(clr[[j]])/another.n
#in.paths<-stage.key[[which.cut]][(clr[[j]]),]#id the incoming pathways
#stages.of.interest <- merge(in.paths[,1:(target.cut-1)], stage.key[[(target.cut-1)]][,c(1:(target.cut-1),dim(stage.key[[(target.cut-1)]])[2])])$stage
#ref.prior.idx <- unlist(lapply(stages.of.interest, function(x){as.numeric(substr(x,nchar(x),nchar(x)))+1}))#gives the stage number, because of weird indexing, want
#in.path.idx <- which(stage.key[[target.cut]]$stage==target.stage)
df_cuts <- list()
for (l in 1:length(clr[[j]])){
df_cuts[[l]] <- df.cut
for(m in 1:(length(colnames(stage.key[[which.cut]]))-2)){
df_cuts[[l]] <- filter(df_cuts[[l]], UQ(sym(colnames(df_cut)[m]))==unlist(stage.key[[which.cut]][clr[[j]][l],m]))#filter according to the matching indices
}
}
df_paths <- do.call(rbind, df_cuts)
# df_paths <- filter(df_paths,Economic==cndtnl.stage.val)
obsv.stage.count <- count(df_paths,UQ(sym(colnames(df_paths)[which.cut])))#how many counts we observe in each stage
if(sum(obsv.stage.count$n)==0){
counts <- rep(0, length(alpha.bar))
} else if ((dim(obsv.stage.count[,1])[[1]]) !=another.n){
counts<-rep(0,length(alpha.bar))
counts[1:(dim(obsv.stage.count[,1])[[1]])] <- obsv.stage.count$n#THERE HAS GOT TO BE A BETTER WAY
counts <- unlist(counts)
} else {
counts <- obsv.stage.count$n
}
print(counts)
#alpha.star <-alpha.bar + counts
alpha.star <- (k^(t-1))*(alpha.bar-1) + (k^(t-tau))*(counts + 1)
p.stgng[j] <- lgamma(sum(alpha.bar))-lgamma(sum(alpha.star)) + sum(lgamma(alpha.star) - sum(lgamma(alpha.bar)))
}
exp(p.stgng)->p3.exp
a <- sum(p.trans[c(possible.stage,current.stage)] * p2.exp) #gives the probability of transitioning to another local stage
b <- exp(sum(p.stgng))
p.monitor[t] <- a*b
#  }
}
return(p.monitor)
}
chds.econ <- -log(one.step.forecast(rho=0.8, epsilon=1.2, df_cut=df,which.cut=3,stage.key=cega.stage.key, n.monitor=20, crrnt.stg = 15))
head(chds.econ)
plot(-log(chds.econ))
plot(-log(chds.econ[-1:5]))
plot(-log(chds.econ[-c(1:5)]))
plot(chds.econ)
plot(-chds.econ)
chds.econ <- -log(one.step.forecast(rho=0.8, epsilon=1.2, df_cut=df,which.cut=3,stage.key=cega.stage.key, n.monitor=200, crrnt.stg = 15))
plot(-chds.econ)
chds.econ <- -log(one.step.forecast(rho=0.8, epsilon=1.2, df_cut=df,which.cut=3,stage.key=cega.stage.key, n.monitor=200, crrnt.stg = 15))
chds.econ2 <- -log(one.step.forecast(rho=0.8, epsilon=1.2, df_cut=df,which.cut=3,stage.key=cega.stage.key, n.monitor=200, crrnt.stg = 14))
chds.econ3 <- -log(one.step.forecast(rho=0.8, epsilon=1.2, df_cut=df,which.cut=3,stage.key=cega.stage.key, n.monitor=200, crrnt.stg = 13))
chds.econ4 <- -log(one.step.forecast(rho=0.8, epsilon=1.2, df_cut=df,which.cut=3,stage.key=cega.stage.key, n.monitor=200, crrnt.stg = 12))
chds.econ5 <- -log(one.step.forecast(rho=0.8, epsilon=1.2, df_cut=df,which.cut=3,stage.key=cega.stage.key, n.monitor=200, crrnt.stg = 11))
df.e <- data.frame(cbind(1:200,chds.econ,chds.econ2, chds.econ3, chds.econ4, chds.econ5))
ggplot(df.e[-c(1:4),], aes(V1, y=chds.econ, color='S(15)')) +
geom_line() +
geom_line(aes(V1, y=chds.econ2, color='S(14)')) +
geom_line(aes(V1, y=chds.econ3, color='S(10)')) +
geom_line(aes(V1, y=chds.econ4, color='S(7)')) +
geom_line(aes(V1, y=chds.econ5, color='S(2)')) +
ggtitle('CEG Parent Child Monitor') +
xlab('Relevant Sample Size') + ylab('Cumulative Log Penalty') +
theme(panel.background = element_blank())
df.e <- data.frame(cbind(1:200,chds.econ,chds.econ2, chds.econ3, chds.econ4, chds.econ5))
ggplot(df.e[-c(1:4),], aes(V1, y=chds.econ, color='S(15)')) +
geom_line() +
geom_line(aes(V1, y=chds.econ2, color='S(14)')) +
geom_line(aes(V1, y=chds.econ3, color='S(10)')) +
geom_line(aes(V1, y=chds.econ4, color='S(7)')) +
geom_line(aes(V1, y=chds.econ5, color='S(2)')) +
ggtitle('CEG Parent Child Monitor') +
xlab('Relevant Sample Size') + ylab('Cumulative Log Penalty') +
theme(panel.background = element_blank())
df.e
df.e <- data.frame(cbind(1:200,-chds.econ,-chds.econ2, -chds.econ3, -chds.econ4, -chds.econ5))
ggplot(df.e[-c(1:4),], aes(V1, y=chds.econ, color='S(15)')) +
geom_line() +
geom_line(aes(V1, y=chds.econ2, color='S(14)')) +
geom_line(aes(V1, y=chds.econ3, color='S(10)')) +
geom_line(aes(V1, y=chds.econ4, color='S(7)')) +
geom_line(aes(V1, y=chds.econ5, color='S(2)')) +
ggtitle('CEG Parent Child Monitor') +
xlab('Relevant Sample Size') + ylab('Cumulative Log Penalty') +
theme(panel.background = element_blank())
df.e <- data.frame(cbind(1:200,chds.econ,chds.econ2, chds.econ3, chds.econ4, chds.econ5))
df.e <- data.frame(cbind(1:200,chds.econ,chds.econ2, chds.econ3, chds.econ4, chds.econ5))
ggplot(df.e[-c(1:4),], aes(V1, y=chds.econ, color='S(15)')) +
geom_line() +
geom_line(aes(V1, y=chds.econ2, color='S(14)')) +
geom_line(aes(V1, y=chds.econ3, color='S(10)')) +
geom_line(aes(V1, y=chds.econ4, color='S(7)')) +
geom_line(aes(V1, y=chds.econ5, color='S(2)')) +
ggtitle('CEG Parent Child Monitor') +
xlab('Relevant Sample Size') + ylab('Cumulative Log Penalty') +
theme(panel.background = element_blank())
head(df.e)
View(df.e)
possible.colorings
tail(df.e)
stage.key[[3]]
chds.econ <- log(one.step.forecast(rho=0.8, epsilon=1.2, df_cut=df,which.cut=3,stage.key=cega.stage.key, n.monitor=200, crrnt.stg = 15))
chds.econ3 <- log(one.step.forecast(rho=0.8, epsilon=1.2, df_cut=df,which.cut=3,stage.key=cega.stage.key, n.monitor=200, crrnt.stg = 13))
chds.econ2 <- log(one.step.forecast(rho=0.8, epsilon=1.2, df_cut=df,which.cut=3,stage.key=cega.stage.key, n.monitor=200, crrnt.stg = 14))
chds.econ5 <- log(one.step.forecast(rho=0.8, epsilon=1.2, df_cut=df,which.cut=3,stage.key=cega.stage.key, n.monitor=200, crrnt.stg = 11))
chds.econ4 <- log(one.step.forecast(rho=0.8, epsilon=1.2, df_cut=df,which.cut=3,stage.key=cega.stage.key, n.monitor=200, crrnt.stg = 12))
df.e <- data.frame(cbind(1:200,chds.econ,chds.econ2, chds.econ3, chds.econ4, chds.econ5))
ggplot(df.e[-c(1:4),], aes(V1, y=chds.econ, color='S(15)')) +
geom_line() +
geom_line(aes(V1, y=chds.econ2, color='S(14)')) +
geom_line(aes(V1, y=chds.econ3, color='S(10)')) +
geom_line(aes(V1, y=chds.econ4, color='S(7)')) +
geom_line(aes(V1, y=chds.econ5, color='S(2)')) +
ggtitle('CEG Parent Child Monitor') +
xlab('Relevant Sample Size') + ylab('Cumulative Log Penalty') +
theme(panel.background = element_blank())
ggplot(df.e[-c(1:4,100:200),], aes(V1, y=chds.econ, color='S(15)')) +
geom_line() +
geom_line(aes(V1, y=chds.econ2, color='S(14)')) +
geom_line(aes(V1, y=chds.econ3, color='S(13)')) +
geom_line(aes(V1, y=chds.econ4, color='S(12)')) +
geom_line(aes(V1, y=chds.econ5, color='S(11)')) +
ggtitle('CEG Parent Child Monitor') +
xlab('Relevant Sample Size') + ylab('Cumulative Log Penalty') +
theme(panel.background = element_blank())
ggplot(df.e[-c(1:4,50:200),], aes(V1, y=chds.econ, color='S(15)')) +
geom_line() +
geom_line(aes(V1, y=chds.econ2, color='S(14)')) +
geom_line(aes(V1, y=chds.econ3, color='S(13)')) +
geom_line(aes(V1, y=chds.econ4, color='S(12)')) +
geom_line(aes(V1, y=chds.econ5, color='S(11)')) +
ggtitle('CEG Parent Child Monitor') +
xlab('Relevant Sample Size') + ylab('Cumulative Log Penalty') +
theme(panel.background = element_blank())
ggplot(df.e[-c(1:4,25:200),], aes(V1, y=chds.econ, color='S(15)')) +
geom_line() +
geom_line(aes(V1, y=chds.econ2, color='S(14)')) +
geom_line(aes(V1, y=chds.econ3, color='S(13)')) +
geom_line(aes(V1, y=chds.econ4, color='S(12)')) +
geom_line(aes(V1, y=chds.econ5, color='S(11)')) +
ggtitle('CEG Parent Child Monitor') +
xlab('Relevant Sample Size') + ylab('Cumulative Log Penalty') +
theme(panel.background = element_blank())
ggplot(df.e[-c(1:4,25:200),], aes(V1, y=chds.econ2, color='S(15)')) +
geom_line() +
geom_line(aes(V1, y=chds.econ2, color='S(14)')) +
geom_line(aes(V1, y=chds.econ3, color='S(13)')) +
geom_line(aes(V1, y=chds.econ4, color='S(12)')) +
geom_line(aes(V1, y=chds.econ5, color='S(11)')) +
ggtitle('CEG Parent Child Monitor') +
xlab('Relevant Sample Size') + ylab('Cumulative Log Penalty') +
theme(panel.background = element_blank())
ggplot(df.e[-c(1:4,100:200),], aes(V1, y=chds.econ2, color='S(15)')) +
geom_line() +
geom_line(aes(V1, y=chds.econ2, color='S(14)')) +
geom_line(aes(V1, y=chds.econ3, color='S(13)')) +
geom_line(aes(V1, y=chds.econ4, color='S(12)')) +
geom_line(aes(V1, y=chds.econ5, color='S(11)')) +
ggtitle('CEG Parent Child Monitor') +
xlab('Relevant Sample Size') + ylab('Cumulative Log Penalty') +
theme(panel.background = element_blank())
ggplot(df.e[-c(1:4,100:200),], aes(V1, y=chds.econ2, color='S(15)')) +
geom_point() +
geom_point(aes(V1, y=chds.econ2, color='S(14)')) +
geom_point(aes(V1, y=chds.econ3, color='S(13)')) +
geom_point(aes(V1, y=chds.econ4, color='S(12)')) +
geom_point(aes(V1, y=chds.econ5, color='S(11)')) +
ggtitle('CEG Parent Child Monitor') +
xlab('Relevant Sample Size') + ylab('Cumulative Log Penalty') +
theme(panel.background = element_blank())
ggplot(df.e[-c(1:4),], aes(V1, y=chds.econ2, color='S(15)')) +
geom_point() +
geom_point(aes(V1, y=chds.econ2, color='S(14)')) +
geom_point(aes(V1, y=chds.econ3, color='S(13)')) +
geom_point(aes(V1, y=chds.econ4, color='S(12)')) +
geom_point(aes(V1, y=chds.econ5, color='S(11)')) +
ggtitle('CEG Parent Child Monitor') +
xlab('Relevant Sample Size') + ylab('Cumulative Log Penalty') +
theme(panel.background = element_blank())
ggplot(df.e[-c(1:4),], aes(V1, y=chds.econ, color='S(15)')) +
geom_point() +
geom_point(aes(V1, y=chds.econ2, color='S(14)')) +
geom_point(aes(V1, y=chds.econ3, color='S(13)')) +
geom_point(aes(V1, y=chds.econ4, color='S(12)')) +
geom_point(aes(V1, y=chds.econ5, color='S(11)')) +
ggtitle('CEG Parent Child Monitor') +
xlab('Relevant Sample Size') + ylab('Cumulative Log Penalty') +
theme(panel.background = element_blank())
ggplot(df.e[-c(1:4),], aes(V1, y=chds.econ, color='S(15)')) +
geom_point() +
geom_point(aes(V1, y=chds.econ2, color='S(14)')) +
geom_point(aes(V1, y=chds.econ3, color='S(13)')) +
geom_point(aes(V1, y=chds.econ4, color='S(12)')) +
geom_point(aes(V1, y=chds.econ5, color='S(11)')) +
ggtitle('CEG Parent Child Monitor') +
xlab('Relevant Sample Size') + ylab('Weighted Cumulative Log Penalty') +
theme(panel.background = element_blank())
chdsB.econ <- log(one.step.forecast(rho=0.8, epsilon=1.2, df_cut=df,which.cut=3,stage.key=cegb.stage.key, n.monitor=200, crrnt.stg = 15))
#######################################CEG B
##THIS IS FOR CEG-b
cegb.w0 <- df %>% count(Social)
cegb.w1 <- df %>% filter(Social=="High") %>% count(Economic)
cegb.w2 <- df %>% filter(Social=="Low") %>% count(Economic)
cegb.w3 <- df %>% filter(Social=="High", Economic=="High" |
Social == "High", Economic=="Low") %>% count(Events)
cegb.w4 <- df %>% filter(Social=="Low", Economic=="High") %>% count(Events)
cegb.w5 <- df %>% filter(Social=="Low", Economic=="Low") %>% count(Events)
cegb.w6 <- df %>% filter((Social=="High" & Economic=="Low" & Events=="Low") |
(Social=="High" & Economic=="High" & Events=="Low")) %>% count(Admission)
cegb.w7 <- df %>% filter((Social=="High" & Economic=="High"  & Events=="Average") |
(Social=="High" & Economic=="Low"  & Events=="Average") |
(Social=="Low" & Economic=="High"  & Events=="Low")|
(Social=="Low" & Economic=="High"  & Events=="Average")|
(Social=="Low" & Economic=="Low"  & Events=="Low")) %>% count(Admission)
cegb.w8 <- df %>% filter((Social=="High" & Economic=="High"  & Events=="High") |
(Social=="High" & Economic=="Low"  & Events=="High") |
(Social=="Low" & Economic=="High"  & Events=="High")|
(Social=="Low" & Economic=="Low"  & Events=="Average") |
(Social=="Low" & Economic=="Low"  & Events=="High")) %>% count(Admission)
cegb.struct <- list(cegb.w0, cegb.w1, cegb.w2, cegb.w3, cegb.w4, cegb.w5, cegb.w6, cegb.w7, cegb.w8)#this is the observed values for each of the stages
#can initalize this, and prompt user to input the pathways for the particular tree
cegb.stage.key <- list()
count(df) -> cegb.stage.key[[1]]
df %>% count(Social) -> cegb.stage.key[[2]]
df %>% count(Social, Economic) -> cegb.stage.key[[3]]
df %>% count(Social, Economic, Events) -> cegb.stage.key[[4]]
df %>% count(Social, Economic, Events,Admission) -> cegb.stage.key[[5]]
#define a stage key for each cut in the data
#Q: how does this change for asymmetries?
cegb.stage.key[[1]]$stage <- c("cegb.w0")##THIS MUST START AT 0 AND NUM MUST BE LAST CHAR
cegb.stage.key[[2]]$stage <- c("cegb.w1", "cegb.w2")
cegb.stage.key[[3]]$stage <- c("cegb.w3", "cegb.w3", "cegb.w4", "cegb.w5")
cegb.stage.key[[4]]$stage <- c("cegb.w7", "cegb.w8","cegb.w6","cegb.w7",
"cegb.w8","cegb.w6","cegb.w7","cegb.w8",
"cegb.w7","cegb.w8","cegb.w8","cegb.w7")#this contains the structure
cegb.stage.key[[5]]$stage <-rep("cegb.winf", length(cegb.stage.key[[5]]$n))
cegb.stages <- list("cegb.w0", "cegb.w1", "cegb.w2", "cegb.w3", "cegb.w4", "cegb.w5", "cegb.w6", "cegb.w7", "cegb.w8")
stages=cegb.stages; struct=cegb.struct; stage.key=cegb.stage.key
stages=cega.stages; struct=cega.struct; stage.key=cega.stage.key
chdsB.econ <- log(one.step.forecast(rho=0.8, epsilon=1.2, df_cut=df,which.cut=3,stage.key=cegb.stage.key, n.monitor=200, crrnt.stg = 15))
chdsB.econ2 <- log(one.step.forecast(rho=0.8, epsilon=1.2, df_cut=df,which.cut=3,stage.key=cegb.stage.key, n.monitor=200, crrnt.stg = 14))
chdsB.econ4 <- log(one.step.forecast(rho=0.8, epsilon=1.2, df_cut=df,which.cut=3,stage.key=cegb.stage.key, n.monitor=200, crrnt.stg = 12))
chdsB.econ3 <- log(one.step.forecast(rho=0.8, epsilon=1.2, df_cut=df,which.cut=3,stage.key=cegb.stage.key, n.monitor=200, crrnt.stg = 13))
chdsB.econ5 <- log(one.step.forecast(rho=0.8, epsilon=1.2, df_cut=df,which.cut=3,stage.key=cegb.stage.key, n.monitor=200, crrnt.stg = 11))
df2.e <- data.frame(cbind(1:200,chds.econ,chds.econ2, chdsB.econ, chdsB.econ2))
ggplot(df.e[-c(1:4),], aes(V1, y=chds.econ, color='A S(15)')) +
geom_line() +
geom_line(aes(V1, y=chds.econ2, color='A S(14)')) +
geom_line(aes(V1, y=chdsB.econ, color='B S(15)')) +
geom_line(aes(V1, y=chdsB.econ2, color='B S(14)')) +
ggtitle('CEG Parent Child Monitor') +
xlab('Relevant Sample Size') + ylab('Cumulative Log Penalty') +
theme(panel.background = element_blank())
possible.colorings
df.e <- data.frame(cbind(1:200,chds.econ,chds.econ2, chds.econ3, chds.econ4, chds.econ5))
df2.e <- data.frame(cbind(1:200,chds.econ,chds.econ2, chdsB.econ, chdsB.econ2))
ggplot(df.e[-c(1:4),], aes(V1, y=chds.econ, color='A S(15)')) +
geom_line() +
geom_line(aes(V1, y=chds.econ2, color='A S(14)')) +
geom_line(aes(V1, y=chdsB.econ, color='B S(15)')) +
geom_line(aes(V1, y=chdsB.econ2, color='B S(14)')) +
ggtitle('CEG Parent Child Monitor') +
xlab('Relevant Sample Size') + ylab('Cumulative Log Penalty') +
theme(panel.background = element_blank())
head(df2.e)
ggplot(df.e[-c(1:4),], aes(V1, y=chds.econ, color='A S(15)')) +
geom_line() +
geom_line(aes(V1, y=chdsB.econ2, color='A S(14)')) +
geom_line(aes(V1, y=chdsB.econ, color='B S(15)')) +
geom_line(aes(V1, y=chdsB.econ2, color='B S(14)')) +
ggtitle('CEG Parent Child Monitor') +
xlab('Relevant Sample Size') + ylab('Cumulative Log Penalty') +
theme(panel.background = element_blank())
ggplot(df.e[-c(1:4),], aes(V1, y=chds.econ, color='A S(15)')) +
geom_line() +
geom_line(aes(V1, y=chdsB.econ2, color='A S(14)')) +
geom_line(aes(V1, y=chdsB.econ3, color='B S(15)')) +
geom_line(aes(V1, y=chdsB.econ4, color='B S(14)')) +
geom_line(aes(V1, y=chdsB.econ5, color='B S(14)')) +
ggtitle('CEG Parent Child Monitor') +
xlab('Relevant Sample Size') + ylab('Cumulative Log Penalty') +
theme(panel.background = element_blank())
df2.e <- data.frame(cbind(1:200,chdsB.econ,chdsB.econ2, chdsB.econ3, chdsB.econ4,chdsB.econ5))
ggplot(df.e[-c(1:4),], aes(V1, y=chds.econ, color='A S(15)')) +
geom_line() +
geom_line(aes(V1, y=chdsB.econ2, color='A S(14)')) +
geom_line(aes(V1, y=chdsB.econ3, color='B S(15)')) +
geom_line(aes(V1, y=chdsB.econ4, color='B S(14)')) +
geom_line(aes(V1, y=chdsB.econ5, color='B S(14)')) +
ggtitle('CEG Parent Child Monitor') +
xlab('Relevant Sample Size') + ylab('Cumulative Log Penalty') +
theme(panel.background = element_blank())
ggplot(df.e[-c(1:4),], aes(V1, y=chdsB.econ, color='A S(15)')) +
geom_line() +
geom_line(aes(V1, y=chdsB.econ2, color='A S(14)')) +
geom_line(aes(V1, y=chdsB.econ3, color='B S(15)')) +
geom_line(aes(V1, y=chdsB.econ4, color='B S(14)')) +
geom_line(aes(V1, y=chdsB.econ5, color='B S(14)')) +
ggtitle('CEG Parent Child Monitor') +
xlab('Relevant Sample Size') + ylab('Cumulative Log Penalty') +
theme(panel.background = element_blank())
df2.e <- data.frame(cbind(1:200,chdsB.econ,chdsB.econ2, chdsB.econ3, chdsB.econ4,chdsB.econ5))
ggplot(df.e[-c(1:4),], aes(V1, y=chdsB.econ, color='A S(15)')) +
geom_line() +
geom_line(aes(V1, y=chdsB.econ2, color='A S(14)')) +
geom_line(aes(V1, y=chdsB.econ3, color='B S(15)')) +
geom_line(aes(V1, y=chdsB.econ4, color='B S(14)')) +
geom_line(aes(V1, y=chdsB.econ5, color='B S(14)')) +
ggtitle('CEG Parent Child Monitor') +
xlab('Relevant Sample Size') + ylab('Cumulative Log Penalty') +
theme(panel.background = element_blank())
head(df2.e)
ggplot(df.e[-c(1:4),], aes(V1, y=chdsB.econ, color='A S(15)')) +
geom_line() +
geom_line(aes(V1, y=chdsB.econ2, color='A S(14)')) +
geom_line(aes(V1, y=chdsB.econ3, color='B S(15)')) +
geom_line(aes(V1, y=chdsB.econ4, color='B S(14)')) +
geom_line(aes(V1, y=chdsB.econ5, color='B S(14)')) +
ggtitle('CEG Parent Child Monitor') +
xlab('Relevant Sample Size') + ylab('Cumulative Log Penalty') +
theme(panel.background = element_blank())
ggplot(df.e[-c(1:4),], aes(V1, y=chdsB.econ, color='A S(15)')) #+
ggplot(df2.e[-c(1:4),], aes(V1, y=chdsB.econ, color='A S(15)')) #+
ggplot(df2.e[-c(1:4),], aes(V1, y=chdsB.econ, color='A S(15)')) +
geom_line() +
geom_line(aes(V1, y=chdsB.econ2, color='A S(14)')) +
geom_line(aes(V1, y=chdsB.econ3, color='B S(15)')) +
geom_line(aes(V1, y=chdsB.econ4, color='B S(14)')) +
geom_line(aes(V1, y=chdsB.econ5, color='B S(14)')) +
ggtitle('CEG Parent Child Monitor') +
xlab('Relevant Sample Size') + ylab('Cumulative Log Penalty') +
theme(panel.background = element_blank())
ggplot(df2.e[-c(1:4),], aes(V1, y=chdsB.econ, color='A S(15)')) +
geom_point() +
geom_point(aes(V1, y=chdsB.econ2, color='A S(14)')) +
geom_point(aes(V1, y=chdsB.econ3, color='B S(15)')) +
geom_point(aes(V1, y=chdsB.econ4, color='B S(14)')) +
geom_point(aes(V1, y=chdsB.econ5, color='B S(14)')) +
ggtitle('CEG Parent Child Monitor') +
xlab('Relevant Sample Size') + ylab('Cumulative Log Penalty') +
theme(panel.background = element_blank())
ggplot(df2.e[-c(1:4),], aes(V1, y=chdsB.econ, color='A S(15)')) +
geom_point() +
geom_point(aes(V1, y=chdsB.econ2, color='A S(14)')) +
geom_point(aes(V1, y=chdsB.econ3, color='B S(15)')) +
geom_point(aes(V1, y=chdsB.econ4, color='B S(14)')) +
geom_point(aes(V1, y=chdsB.econ5, color='B S(4)')) +
ggtitle('CEG Parent Child Monitor') +
xlab('Relevant Sample Size') + ylab('Cumulative Log Penalty') +
theme(panel.background = element_blank())
ggplot(df2.e[-c(1:4),], aes(V1, y=chdsB.econ, color='A S(15)')) +
geom_point() +
geom_point(aes(V1, y=chdsB.econ2, color='S(14)')) +
geom_point(aes(V1, y=chdsB.econ3, color='S(13)')) +
geom_point(aes(V1, y=chdsB.econ4, color='S(12)')) +
geom_point(aes(V1, y=chdsB.econ5, color='S(11)')) +
ggtitle('CEG Parent Child Monitor') +
xlab('Relevant Sample Size') + ylab('Cumulative Log Penalty') +
theme(panel.background = element_blank())
possible.colorings
cegb.stage.key
tail(df2.e)
possible.colorings
chds.econ6 <- log(one.step.forecast(rho=0.8, epsilon=1.2, df_cut=df,which.cut=3,stage.key=cega.stage.key, n.monitor=200, crrnt.stg = 10))
chdsB.econ6 <- log(one.step.forecast(rho=0.8, epsilon=1.2, df_cut=df,which.cut=3,stage.key=cegb.stage.key, n.monitor=200, crrnt.stg = 10))
df.e <- data.frame(cbind(1:200,chds.econ,chds.econ2, chds.econ3, chds.econ4, chds.econ5,chds.econ6))
ggplot(df.e[-c(1:4),], aes(V1, y=chds.econ, color='S(15)')) +
geom_point() +
geom_point(aes(V1, y=chds.econ2, color='S(14)')) +
geom_point(aes(V1, y=chds.econ3, color='S(13)')) +
geom_point(aes(V1, y=chds.econ4, color='S(12)')) +
geom_point(aes(V1, y=chds.econ5, color='S(11)')) +
geom_point(aes(V1, y=chds.econ6, color='S(10)')) +
ggtitle('CEG Parent Child Monitor') +
xlab('Relevant Sample Size') + ylab('Weighted Cumulative Log Penalty') +
theme(panel.background = element_blank())
tail(df.e)
df2.e <- data.frame(cbind(1:200,chdsB.econ,chdsB.econ2, chdsB.econ3, chdsB.econ4,chdsB.econ5,chdsB.econ6))
ggplot(df2.e[-c(1:4),], aes(V1, y=chdsB.econ, color='S(15)')) +
geom_point() +
geom_point(aes(V1, y=chdsB.econ2, color='S(14)')) +
geom_point(aes(V1, y=chdsB.econ3, color='S(13)')) +
geom_point(aes(V1, y=chdsB.econ4, color='S(12)')) +
geom_point(aes(V1, y=chdsB.econ5, color='S(11)')) +
geom_point(aes(V1, y=chdsB.econ6, color='S(10)')) +
ggtitle('CEG Parent Child Monitor') +
xlab('Relevant Sample Size') + ylab('Cumulative Log Penalty') +
theme(panel.background = element_blank())
tail(df2.e)
stage.key
rm(stage.key,which.cut,n.monitor,crrnt.stg)
chdsB.econ6 <- log(one.step.forecast(rho=0.8, epsilon=1.2, df_cut=df,which.cut=3,stage.key=cegb.stage.key, n.monitor=200, crrnt.stg = 10))
df2.e <- data.frame(cbind(1:200,chdsB.econ,chdsB.econ2, chdsB.econ3, chdsB.econ4,chdsB.econ5,chdsB.econ6))
ggplot(df2.e[-c(1:4),], aes(V1, y=chdsB.econ, color='S(15)')) +
geom_point() +
geom_point(aes(V1, y=chdsB.econ2, color='S(14)')) +
geom_point(aes(V1, y=chdsB.econ3, color='S(13)')) +
geom_point(aes(V1, y=chdsB.econ4, color='S(12)')) +
geom_point(aes(V1, y=chdsB.econ5, color='S(11)')) +
geom_point(aes(V1, y=chdsB.econ6, color='S(10)')) +
ggtitle('CEG Parent Child Monitor') +
xlab('Relevant Sample Size') + ylab('Cumulative Log Penalty') +
theme(panel.background = element_blank())
df2.e
tail(df2.e)
tail(df2.e)
tail(df.e)
crrnt.stg
savehistory("~/diagnostics/theOneWithTheCHDSexample.RData")
